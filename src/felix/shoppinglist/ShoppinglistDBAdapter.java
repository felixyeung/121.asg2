package felix.shoppinglist;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.util.Log;

public class ShoppinglistDBAdapter {
  private static final String DATABASE_NAME = "shoppinglist.db";
  private static final String LISTS_TABLE = "lists";
  private static final String ITEMS_TABLE = "items";
  private static final String LIST_ITEMS = "lists_items";
  private static final int DATABASE_VERSION = 3;
 
  ///////////////////////////////////////////////////////////
  //FOR NOW, LET'S NOT USE THESE CONSTANTS. THEY FORCE USE TO
  //CONCAT OUR SQL QUERIES AND THAT GETS REALLY UGLY.
  ///////////////////////////////////////////////////////////
  /*lists table columns*/
  public static final String LIST_ID = "_id";
  public static final String LIST_NAME = "name";
  public static final String LIST_CREATED = "created";
  
  /*items table columns*/
  public static final String ITEM_ID = "_id";
  public static final String ITEM_NAME = "name";
  
  /*many to many table columns*/
  public static final String R_ID = "_id";
  public static final String R_LID = "list_id";
  public static final String R_IID = "item_id";
  
  private SQLiteDatabase db;
  private final Context context;
  private shoppinglistDBOpenHelper dbHelper;

  // Just create a instance of DBopenhelper into our dbHelper varible
  public ShoppinglistDBAdapter(Context _context) {
    this.context = _context;
    dbHelper = new shoppinglistDBOpenHelper(context, DATABASE_NAME, 
                                    null, DATABASE_VERSION);
  }
  
  public void close() {
    db.close();
  }
  
  public void open() throws SQLiteException {  
    try {
      db = dbHelper.getWritableDatabase();
    } catch (SQLiteException ex) {
      db = dbHelper.getReadableDatabase();
    }
  }  
  
  
  //INSERT LIST
  public long insertList(ShoppingList list) {
	  ContentValues list_row = new ContentValues();
	  
	  //add our list object into db
	  list_row.put("name", list.getName());
	  list_row.put("created", list.getCreated().getTime());
	  
	  return db.insert(LISTS_TABLE, null, list_row);
  }
  
  //DELETE LIST
  public boolean deleteList(long id) {
	  return db.delete(LISTS_TABLE, "_id = " + id , null) > 0;
  }
  
  //UPDATE LIST
  
  //INSERT ITEM 
  public long insertItemIntoList(ShoppingList list, ShoppingItem item) {
	  ContentValues item_row = new ContentValues();
	  ContentValues relation_row = new ContentValues();
	  
	  //insert a new item
	  item_row.put("name", item.getName());
	  long item_id = db.insert(ITEMS_TABLE, null, item_row);
	  
	  //add this item to a shopping list
	  relation_row.put("list_id", list.getId());
	  relation_row.put("item_id", item_id);
	  
	  return db.insert(LIST_ITEMS, null, relation_row);
  }
  
  //DELETE ITEM
  
  //UPDATE ITEM
  
  //FETCH ALL LISTS RET CURSOR
  public Cursor getAllLists() {
	  //create an argument list of one item, the stringified list_id.
	  String query = "SELECT * FROM lists";
	  
	  //execute
	  Cursor c = db.rawQuery(query, null);
	  
	  return c;
  }
  
  //FETCH ONE LIST CURSOR
  public Cursor getOneList(long list_id) {
	  //create an argument list of one item, the stringified list_id.
	  String query = "SELECT * FROM lists WHERE _id = ?";
	  String[] args = new String[]{String.valueOf(list_id)};
	  
	  //execute
	  Cursor c = db.rawQuery(query, args);
	  
	  return c;
  }
  
  //FETCH ALL ITEMS IN ONE LIST CURSOR
  public Cursor getItemsForList(long list_id) {
	  //Select all items for a given shopping 
	  String query = "SELECT * FROM items, lists_items WHERE lists_items.list_id = ?";
	  String[] args = new String[]{String.valueOf(list_id)};
	  
	  //execute
	  Cursor c = db.rawQuery(query, args);
	  
	  return c;
  }
  
  //FETCH AN INSTANCE OF A shoppinglistItem
  
  //FETCH AN INSTANCE OF A shoppinglistList
  
  
  
  private static class shoppinglistDBOpenHelper extends SQLiteOpenHelper {

	  public shoppinglistDBOpenHelper(Context context, String name,
	                          CursorFactory factory, int version) {
	    super(context, name, factory, version);
	  }

	  // SQL Statement to create a new database.
	  
	  private static final String CREATE_LISTS_TABLE = "CREATE TABLE lists" +
	  												   "(_id INTEGER primary key autoincrement," +
	  												   " name TEXT not null," +
	  												   " created LONG)";
	  
	  private static final String CREATE_ITEMS_TABLE = "CREATE TABLE items" +
				   									   "(_id INTEGER primary key autoincrement," +
				   									   " name TEXT not null)";
	  
	  private static final String CREATE_RELATION = "CREATE TABLE lists_items" +
			  										"(_id INTEGER primary key autoincrement," +
			  										" list_id INTEGER," +
			  										" item_id INTEGER," +
			  										" FOREIGN KEY(list_id) REFERENCES lists(_id) )";

	  @Override
	  public void onCreate(SQLiteDatabase _db) {
	    _db.execSQL(CREATE_LISTS_TABLE);
	    _db.execSQL(CREATE_ITEMS_TABLE);
	    _db.execSQL(CREATE_RELATION);
	  }

	  @Override
	  public void onUpgrade(SQLiteDatabase _db, int _oldVersion, int _newVersion) {
		  
	    Log.w("TaskDBAdapter", "Upgrading from version " + 
	                           _oldVersion + " to " +
	                           _newVersion + ", which will destroy all old data");

	    //remove all three tables
	    _db.execSQL("DROP TABLE IF EXISTS " + CREATE_LISTS_TABLE);
	    _db.execSQL("DROP TABLE IF EXISTS " + CREATE_ITEMS_TABLE);
	    _db.execSQL("DROP TABLE IF EXISTS " + CREATE_RELATION);
	    
	    // Create new tables
	    onCreate(_db);
	  }
	}
}